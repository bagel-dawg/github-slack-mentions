service: github-slack-mentions

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  default_stage: test
  pythonRequirements:
    dockerizePip: non-linux
  customDomain:
    domainName: <custom domain name>
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true    

provider:
  name: aws
  profile: bageltechnologies
  runtime: python3.7
  stage: dev
  region: us-east-1
  environment:
    SLACK_BOT_TOKEN: xoxb-< slack bot token >
    GITHUB_SECRET: <github webhook secret>
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/slack_id"

package:
  include:
    - "*.py"
    - "helpers/*.py"

functions:
  mentions:
    handler: route_requests.lambda_handler
    events:
      - http:
          path: github-webhook/mentions
          method: post
          integration: lambda-proxy
          
resources:
  Resources:
    gitusers:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: ghusername
            AttributeType: S
          - AttributeName: slack_id
            AttributeType: S
        KeySchema:
          - AttributeName: ghusername
            KeyType: HASH
        GlobalSecondaryIndexes:
        - IndexName: slack_id
          KeySchema:
          - AttributeName: slack_id
            KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: '1'
            WriteCapacityUnits: '1'              
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}